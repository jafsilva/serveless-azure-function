name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Set Terraform Azure Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ steps.azure_login_step.outputs.client_id }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ steps.azure_login_step.outputs.client_secret }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ steps.azure_login_step.outputs.subscription_id }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ steps.azure_login_step.outputs.tenant_id }}" >> $GITHUB_ENV
        shell: bash

      - name: Debug Environment Variables (after setting from outputs)
        run: |
          echo "Checking ARM_* environment variables after setting from outputs:"
          echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
          echo "ARM_CLIENT_SECRET: (Set if valid, not displayed for security)"
          echo "ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"
          echo "ARM_TENANT_ID: $ARM_TENANT_ID"
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan


  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: create-infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Zip package azure-function.zip
        run: zip -r azure-function.zip function_app.py host.json requirements.txt

      - name: Deploy function
        run: az functionapp deployment source config-zip --resource-group zelabs --name zelabs --src azure-function.zip --build-remote true